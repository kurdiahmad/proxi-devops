def branchName      =  "staging"
def gitUrl          =  "git@github.com:kurdiahmad/proxi-devops.git"
def gitUrlCode      =  "git@github.com:kurdiahmad/hash_service.git"
def serviceName     =  "hash_service"
def EnvName         = "staging"
def imageTag        = "${EnvName}-${BUILD_NUMBER}"
def registryId      =  "849310207669"
def awsRegion       =  "us-east-1"
def ecrUrl          =  "849310207669.dkr.ecr.us-east-1.amazonaws.com"
def awsCredsId      =  "aws-credentials"
def gitCred         =  "Bitbucket-jenkins"
def configPath      = "dockerfile-and-default-config"
def dockerfile      = "Dockerfile-${serviceName}"
//AppConfig Params
def applicationName = "t-marketing-email"
def envName = "staging"
def configName = "staging"
def clientId = "${applicationName}"-"${envName}"

def namespace       = "tx"
def helmDir         = "slashtec/devops-tarjama/tx/${envName}/${serviceName}/helm"



node () {
    stage("Setup parameters") {
        script {
            properties([
                buildDiscarder(logRotator(numToKeepStr: '30')),
                disableConcurrentBuilds(),
                disableResume(),
                parameters([
                    string(
                        defaultValue: 'main',
                        name: 'branch',
                        trim: true
                    )
                ])
            ])
        }
    }

    stage ("Get the app code") {
        steps {
            script {
                sh 'mkdir -p ~/.ssh && ssh-keyscan -H github.com >> ~/.ssh/known_hosts'
                checkout([$class: 'GitSCM', 
                    branches: [[name: "${branchName}"]], 
                    extensions: [], 
                    userRemoteConfigs: [[
                        credentialsId: 'github-ssh',  // Ensure this matches Jenkins credentials
                        url: "${gitUrlCode}"
                    ]]
                ])
            }
        }
    }
}


 
